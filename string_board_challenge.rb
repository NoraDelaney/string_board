string = ARGV[0]
# string

x = 2
x_array = []
while x < string.length
  if string.length % x == 0
    x_array << x
  end
  x += 1
end

array_of_rects = []
x_array.each do |n|
  rect = []
  new_array = string.chars.each_slice(n).map(&:join)
  new_array.each do |row|
    rect << row.split('')
  end
  array_of_rects << rect
end

solid_rows = []
 array_of_rects.each do |rect|
   row_number = 0
   rect.each do |row|
     row_number += 1 unless row.include? '0'
   end
   solid_rows << row_number
 end

 solid_cols = []
  array_of_rects.each do |rect|
    col_number = 0
    rect.transpose.each do |col|
      col_number += 1 unless col.include? '0'
    end
    solid_cols << col_number
  end

sum_array = []
array_of_rects.length.times do |i|
  sum_array[i] = solid_rows[i] + solid_cols[i]
end

if sum_array.count(sum_array.max) > 1
  puts "We have a tie!"
  puts "Boards with most solid rows and columns:"
  puts
  sum_array.length.times do |i|
    if sum_array[i] == sum_array.max
      puts array_of_rects[i].map(&:join)
      puts
    end
  end
else
  puts "Board with most solid rows and columns:"
  puts
  puts array_of_rects[sum_array.index(sum_array.max)].map(&:join)
end
